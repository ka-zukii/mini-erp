"""update barang

Revision ID: fc62eea0151e
Revises: f06b92521b1d
Create Date: 2025-07-10 19:18:17.413006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fc62eea0151e'
down_revision: Union[str, Sequence[str], None] = 'f06b92521b1d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('barang', sa.Column('id_supplier', sa.String(), nullable=True))
    op.create_foreign_key(None, 'barang', 'supplier', ['id_supplier'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('supplier_id_barang_key'), 'supplier', type_='unique')
    op.drop_constraint(op.f('supplier_id_barang_fkey'), 'supplier', type_='foreignkey')
    op.drop_column('supplier', 'id_barang')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('supplier', sa.Column('id_barang', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('supplier_id_barang_fkey'), 'supplier', 'barang', ['id_barang'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint(op.f('supplier_id_barang_key'), 'supplier', ['id_barang'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(None, 'barang', type_='foreignkey')
    op.drop_column('barang', 'id_supplier')
    # ### end Alembic commands ###
